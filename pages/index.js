import Head from "next/head";
import Image from "next/image";
import { Inter } from "@next/font/google";
import styles from "@/styles/Home.module.scss";
import { useEffect } from "react";

const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  useEffect(() => {
    // const paginations = document.querySelectorAll(".pagination a");
    // paginations.forEach((pagination) => {
    //   pagination.addEventListener("click", (e) => {
    //     e.preventDefault();
    //     const targetId = e.target.hash;
    //     const target = document.querySelector(targetId);
    //     target.scrollIntoView({ behavior: "smooth" });
    //   });
    // });
    // // Intersection Observer
    // const sections = document.querySelectorAll(".section");
    // const observerRoot = document.querySelector(".fullPageScroll");
    // const options = {
    //   root: observerRoot,
    //   rootMargin: "-50% 0px",
    //   threshold: 0,
    // };
    // const observer = new IntersectionObserver(doWhenIntersect, options);
    // console.log(observer);
    // sections.forEach((section) => {
    //   observer.observe(section);
    // });
    // /**
    //  * 交差したときに呼び出す関数
    //  * @param entries - IntersectionObserverEntry IntersectionObserverが交差したときに渡されるオブジェクトです。
    //  */
    // function doWhenIntersect(entries) {
    //   entries.forEach((entry) => {
    //     if (entry.isIntersecting) {
    //       console.log(entry.target);
    //       activatePagination(entry.target);
    //     }
    //   });
    // }
    // /**
    //  * ページネーションの大きさを変える関数
    //  * @param element - HTMLElement 現在表示中のスライドのHTML要素を引数に取ります。
    //  */
    // function activatePagination(element) {
    //   const currentActiveIndex = document.querySelector("#pagination .active");
    //   if (currentActiveIndex !== null) {
    //     currentActiveIndex.classList.remove("active");
    //   }
    //   const newActiveIndex = document.querySelector(`a[href='#${element.id}']`);
    //   newActiveIndex.classList.add("active");
    // }
  }, []);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div className="fullPageScroll">
          <section id="section1" className="section ">
            {/* <img src="./cat.jpg" /> */}
          </section>
          <section id="section1" className="section section1">
            <img src="./cat.jpg" />
          </section>
          <section id="section2" className="section section2">
            <img src="./cat.jpg" />
          </section>
          <section id="section3" className="section section3">
            <img src="./cat.jpg" />
          </section>
          <section id="section4" className="section section4">
            <img src="./cat.jpg" />
          </section>
          <section id="section5" className="section section5">
            <img src="./cat.jpg" />
          </section>
        </div>
        <nav id="pagination" className="pagination">
          <a id="pagination1" href="#section1"></a>
          <a id="pagination2" href="#section2"></a>
          <a id="pagination3" href="#section3"></a>
          <a id="pagination4" href="#section4"></a>
          <a id="pagination5" href="#section5"></a>
        </nav>
      </main>
    </>
  );
}
